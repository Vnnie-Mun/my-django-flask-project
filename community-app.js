// Community Platform Application
class CommunityApp {
    constructor() {
        this.events = [];
        this.members = [];
        this.registeredEvents = [];
        this.userProfile = null;
        
        this.init();
    }

    async init() {
        this.setupEventListeners();
        await this.loadEvents();
        await this.loadMembers();
        this.updateStats();
    }

    setupEventListeners() {
        // Join community buttons
        document.getElementById('join-whatsapp')?.addEventListener('click', () => this.joinWhatsApp());
        document.getElementById('join-discord')?.addEventListener('click', () => this.joinDiscord());
        document.getElementById('join-whatsapp-cta')?.addEventListener('click', () => this.joinWhatsApp());
        document.getElementById('join-discord-cta')?.addEventListener('click', () => this.joinDiscord());
        
        // Social media links
        document.getElementById('twitter-link')?.addEventListener('click', (e) => {
            e.preventDefault();
            this.openSocialMedia('twitter');
        });
        document.getElementById('linkedin-link')?.addEventListener('click', (e) => {
            e.preventDefault();
            this.openSocialMedia('linkedin');
        });
        document.getElementById('github-link')?.addEventListener('click', (e) => {
            e.preventDefault();
            this.openSocialMedia('github');
        });
        document.getElementById('discord-link')?.addEventListener('click', (e) => {
            e.preventDefault();
            this.joinDiscord();
        });
        
        // Navigation
        document.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', (e) => {
                if (link.getAttribute('href').startsWith('#')) {
                    e.preventDefault();
                    const target = document.querySelector(link.getAttribute('href'));\n                    if (target) {\n                        target.scrollIntoView({ behavior: 'smooth' });\n                    }\n                }\n            });\n        });\n    }\n\n    async loadEvents() {\n        // Mock events data\n        this.events = [\n            {\n                id: 1,\n                title: 'AI & Machine Learning Workshop',\n                description: 'Learn the fundamentals of AI and ML with hands-on projects and real-world applications.',\n                date: new Date('2025-01-28T14:00:00'),\n                duration: '3 hours',\n                location: 'Virtual Event',\n                type: 'workshop',\n                capacity: 100,\n                registered: 67,\n                instructor: 'Dr. Jane Doe',\n                level: 'Beginner to Intermediate'\n            },\n            {\n                id: 2,\n                title: 'Blockchain Development Bootcamp',\n                description: '3-day intensive bootcamp covering smart contracts, DApps, and Web3 development.',\n                date: new Date('2025-02-05T09:00:00'),\n                duration: '3 days',\n                location: 'Nairobi, Kenya',\n                type: 'bootcamp',\n                capacity: 50,\n                registered: 32,\n                instructor: 'John Smith',\n                level: 'Intermediate to Advanced'\n            },\n            {\n                id: 3,\n                title: 'Startup Pitch Night',\n                description: 'Present your startup idea to a panel of investors and get valuable feedback.',\n                date: new Date('2025-02-12T18:00:00'),\n                duration: '3 hours',\n                location: 'Hybrid Event',\n                type: 'networking',\n                capacity: 200,\n                registered: 89,\n                instructor: 'Panel of Investors',\n                level: 'All Levels'\n            }\n        ];\n    }\n\n    async loadMembers() {\n        // Mock members data\n        this.members = {\n            total: 500,\n            countries: 25,\n            projects: 50,\n            events: 100\n        };\n    }\n\n    async joinWhatsApp() {
        window.open('https://chat.whatsapp.com/LuiZfvuj5E2At8FsIJTces', '_blank');
        this.showToast('Redirecting to WhatsApp community...', 'info');
        return;\n        // Show WhatsApp join modal\n        this.showJoinModal('WhatsApp', {\n            title: 'Join Our WhatsApp Community',\n            description: 'Connect with 500+ innovators, share ideas, get help, and stay updated on the latest opportunities.',\n            benefits: [\n                'Daily tech discussions and Q&A',\n                'Job opportunities and referrals',\n                'Project collaboration opportunities',\n                'Event announcements and updates',\n                'Direct access to mentors and experts'\n            ],\n            action: 'Join WhatsApp Group',\n            icon: 'fab fa-whatsapp',\n            color: '#25D366'\n        });\n    }\n\n    async joinDiscord() {
        window.open('https://discord.gg/QKnazj45', '_blank');
        this.showToast('Redirecting to Discord server...', 'info');
        return;\n        // Show Discord join modal\n        this.showJoinModal('Discord', {\n            title: 'Join Our Discord Server',\n            description: 'Join our organized Discord community with dedicated channels for different topics and interests.',\n            benefits: [\n                'Organized channels by technology and interest',\n                'Voice chat for real-time collaboration',\n                'Screen sharing for code reviews',\n                'Bot integrations for productivity',\n                'Private channels for project teams'\n            ],\n            action: 'Join Discord Server',\n            icon: 'fab fa-discord',\n            color: '#5865F2'\n        });\n    }\n\n    showJoinModal(platform, config) {\n        const modal = this.createModal(`\n            <div class=\"join-modal\">\n                <div class=\"modal-header\">\n                    <div class=\"platform-icon\" style=\"color: ${config.color}\">\n                        <i class=\"${config.icon}\"></i>\n                    </div>\n                    <h3>${config.title}</h3>\n                    <p>${config.description}</p>\n                </div>\n                \n                <div class=\"modal-content\">\n                    <h4>What you'll get:</h4>\n                    <ul class=\"benefits-list\">\n                        ${config.benefits.map(benefit => `<li><i class=\"fas fa-check\"></i> ${benefit}</li>`).join('')}\n                    </ul>\n                    \n                    <form class=\"join-form\" id=\"join-form\">\n                        <div class=\"form-group\">\n                            <label>Full Name *</label>\n                            <input type=\"text\" name=\"name\" required>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label>Email Address *</label>\n                            <input type=\"email\" name=\"email\" required>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label>Phone Number (for WhatsApp)</label>\n                            <input type=\"tel\" name=\"phone\" ${platform === 'WhatsApp' ? 'required' : ''}>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label>Your Role/Profession</label>\n                            <select name=\"role\">\n                                <option value=\"\">Select your role</option>\n                                <option value=\"developer\">Software Developer</option>\n                                <option value=\"designer\">UI/UX Designer</option>\n                                <option value=\"entrepreneur\">Entrepreneur</option>\n                                <option value=\"student\">Student</option>\n                                <option value=\"investor\">Investor</option>\n                                <option value=\"other\">Other</option>\n                            </select>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label>Areas of Interest</label>\n                            <div class=\"checkbox-group\">\n                                <label class=\"checkbox-label\">\n                                    <input type=\"checkbox\" name=\"interests\" value=\"ai-ml\"> AI & Machine Learning\n                                </label>\n                                <label class=\"checkbox-label\">\n                                    <input type=\"checkbox\" name=\"interests\" value=\"blockchain\"> Blockchain & Web3\n                                </label>\n                                <label class=\"checkbox-label\">\n                                    <input type=\"checkbox\" name=\"interests\" value=\"mobile\"> Mobile Development\n                                </label>\n                                <label class=\"checkbox-label\">\n                                    <input type=\"checkbox\" name=\"interests\" value=\"startup\"> Startups & Entrepreneurship\n                                </label>\n                                <label class=\"checkbox-label\">\n                                    <input type=\"checkbox\" name=\"interests\" value=\"design\"> Design & UX\n                                </label>\n                                <label class=\"checkbox-label\">\n                                    <input type=\"checkbox\" name=\"interests\" value=\"fintech\"> FinTech\n                                </label>\n                            </div>\n                        </div>\n                        \n                        <div class=\"form-actions\">\n                            <button type=\"button\" class=\"btn btn-secondary\" onclick=\"this.closest('.modal-overlay').remove()\">Cancel</button>\n                            <button type=\"submit\" class=\"btn btn-primary\" style=\"background-color: ${config.color}; border-color: ${config.color}\">\n                                <i class=\"${config.icon}\"></i>\n                                ${config.action}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        `);\n        \n        modal.querySelector('#join-form').addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.submitJoinRequest(platform, new FormData(e.target));\n            modal.remove();\n        });\n    }\n\n    async submitJoinRequest(platform, formData) {\n        try {\n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 1500));\n            \n            const joinData = {\n                platform: platform,\n                name: formData.get('name'),\n                email: formData.get('email'),\n                phone: formData.get('phone'),\n                role: formData.get('role'),\n                interests: formData.getAll('interests'),\n                joinedAt: new Date()\n            };\n            \n            // Simulate successful join\n            this.showToast(`Welcome to our ${platform} community! You'll receive an invitation link within 24 hours.`, 'success');\n            \n            // Show next steps\n            setTimeout(() => {\n                this.showNextStepsModal(platform);\n            }, 2000);\n            \n        } catch (error) {\n            console.error('Join error:', error);\n            this.showToast(`Failed to join ${platform} community. Please try again.`, 'error');\n        }\n    }\n\n    showNextStepsModal(platform) {\n        const steps = platform === 'WhatsApp' ? [\n            'Check your email for the WhatsApp group invitation link',\n            'Click the link to join our community group',\n            'Introduce yourself to the community',\n            'Explore pinned messages for community guidelines',\n            'Start engaging in discussions and asking questions'\n        ] : [\n            'Check your email for the Discord server invitation link',\n            'Create a Discord account if you don\\'t have one',\n            'Join our server and verify your account',\n            'Read the welcome channel and community rules',\n            'Choose your roles and interests in the setup channel'\n        ];\n        \n        const modal = this.createModal(`\n            <div class=\"next-steps-modal\">\n                <div class=\"modal-header\">\n                    <div class=\"success-icon\">\n                        <i class=\"fas fa-check-circle\"></i>\n                    </div>\n                    <h3>Welcome to the Community!</h3>\n                    <p>Here's what happens next:</p>\n                </div>\n                \n                <div class=\"steps-list\">\n                    ${steps.map((step, index) => `\n                        <div class=\"step-item\">\n                            <div class=\"step-number\">${index + 1}</div>\n                            <div class=\"step-text\">${step}</div>\n                        </div>\n                    `).join('')}\n                </div>\n                \n                <div class=\"modal-actions\">\n                    <button class=\"btn btn-primary\" onclick=\"this.closest('.modal-overlay').remove()\">Got it!</button>\n                </div>\n            </div>\n        `);\n    }\n\n    async registerForEvent(eventId) {\n        const event = this.events.find(e => e.id === eventId);\n        if (!event) return;\n        \n        if (this.registeredEvents.includes(eventId)) {\n            this.showToast('You are already registered for this event', 'info');\n            return;\n        }\n        \n        this.showEventRegistrationModal(event);\n    }\n\n    showEventRegistrationModal(event) {\n        const modal = this.createModal(`\n            <div class=\"event-registration-modal\">\n                <div class=\"modal-header\">\n                    <h3>Register for ${event.title}</h3>\n                    <div class=\"event-details\">\n                        <p><i class=\"fas fa-calendar\"></i> ${new Date(event.date).toLocaleDateString()}</p>\n                        <p><i class=\"fas fa-clock\"></i> ${event.duration}</p>\n                        <p><i class=\"fas fa-map-marker-alt\"></i> ${event.location}</p>\n                        <p><i class=\"fas fa-user\"></i> ${event.instructor}</p>\n                    </div>\n                </div>\n                \n                <div class=\"modal-content\">\n                    <p>${event.description}</p>\n                    \n                    <form class=\"registration-form\" id=\"event-registration-form\">\n                        <div class=\"form-group\">\n                            <label>Full Name *</label>\n                            <input type=\"text\" name=\"name\" required>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label>Email Address *</label>\n                            <input type=\"email\" name=\"email\" required>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label>Experience Level</label>\n                            <select name=\"experience\">\n                                <option value=\"beginner\">Beginner</option>\n                                <option value=\"intermediate\">Intermediate</option>\n                                <option value=\"advanced\">Advanced</option>\n                            </select>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label>What do you hope to learn?</label>\n                            <textarea name=\"expectations\" rows=\"3\" placeholder=\"Tell us what you're hoping to get out of this event...\"></textarea>\n                        </div>\n                        \n                        <div class=\"form-actions\">\n                            <button type=\"button\" class=\"btn btn-secondary\" onclick=\"this.closest('.modal-overlay').remove()\">Cancel</button>\n                            <button type=\"submit\" class=\"btn btn-primary\">Register for Event</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        `);\n        \n        modal.querySelector('#event-registration-form').addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.submitEventRegistration(event.id, new FormData(e.target));\n            modal.remove();\n        });\n    }\n\n    async submitEventRegistration(eventId, formData) {\n        try {\n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            const registration = {\n                eventId: eventId,\n                name: formData.get('name'),\n                email: formData.get('email'),\n                experience: formData.get('experience'),\n                expectations: formData.get('expectations'),\n                registeredAt: new Date()\n            };\n            \n            this.registeredEvents.push(eventId);\n            \n            // Update event registration count\n            const event = this.events.find(e => e.id === eventId);\n            if (event) {\n                event.registered += 1;\n            }\n            \n            this.showToast('Event registration successful! You will receive confirmation and joining details via email.', 'success');\n            \n        } catch (error) {\n            console.error('Registration error:', error);\n            this.showToast('Registration failed. Please try again.', 'error');\n        }\n    }\n\n    openSocialMedia(platform) {\n        const urls = {\n            twitter: 'https://twitter.com/innovatorsofhonour',\n            linkedin: 'https://linkedin.com/company/innovators-of-honour',\n            github: 'https://github.com/innovators-of-honour'\n        };\n        \n        if (urls[platform]) {\n            window.open(urls[platform], '_blank');\n        }\n    }\n\n    // Footer link functions\n    viewEvents() {\n        document.querySelector('.upcoming-events')?.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    viewMentorship() {\n        this.showToast('Mentorship program details coming soon!', 'info');\n    }\n\n    viewWorkshops() {\n        this.showToast('Workshop schedule will be updated weekly', 'info');\n    }\n\n    viewResources() {\n        this.showToast('Learning resources portal coming soon!', 'info');\n    }\n\n    viewProjects() {\n        this.showToast('Community projects showcase coming soon!', 'info');\n    }\n\n    viewGuidelines() {\n        document.querySelector('.community-guidelines')?.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    getHelp() {\n        this.showContactModal('Help Center', 'Get help with community features and technical issues');\n    }\n\n    contactSupport() {\n        this.showContactModal('Contact Support', 'Reach out to our support team for assistance');\n    }\n\n    reportIssue() {\n        this.showContactModal('Report Issue', 'Report a problem or inappropriate behavior');\n    }\n\n    showContactModal(title, description) {\n        const modal = this.createModal(`\n            <div class=\"contact-modal\">\n                <div class=\"modal-header\">\n                    <h3>${title}</h3>\n                    <p>${description}</p>\n                </div>\n                \n                <form class=\"contact-form\" id=\"contact-form\">\n                    <div class=\"form-group\">\n                        <label>Your Name *</label>\n                        <input type=\"text\" name=\"name\" required>\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <label>Email Address *</label>\n                        <input type=\"email\" name=\"email\" required>\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <label>Subject *</label>\n                        <input type=\"text\" name=\"subject\" required>\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <label>Message *</label>\n                        <textarea name=\"message\" rows=\"5\" required placeholder=\"Please describe your issue or question in detail...\"></textarea>\n                    </div>\n                    \n                    <div class=\"form-actions\">\n                        <button type=\"button\" class=\"btn btn-secondary\" onclick=\"this.closest('.modal-overlay').remove()\">Cancel</button>\n                        <button type=\"submit\" class=\"btn btn-primary\">Send Message</button>\n                    </div>\n                </form>\n            </div>\n        `);\n        \n        modal.querySelector('#contact-form').addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.submitContactForm(new FormData(e.target));\n            modal.remove();\n        });\n    }\n\n    async submitContactForm(formData) {\n        try {\n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            this.showToast('Message sent successfully! We will respond within 24 hours.', 'success');\n            \n        } catch (error) {\n            console.error('Contact error:', error);\n            this.showToast('Failed to send message. Please try again.', 'error');\n        }\n    }\n\n    updateStats() {\n        // Animate stats counters\n        const stats = [\n            { selector: '.stat-card:nth-child(1) .stat-number', value: this.members.total },\n            { selector: '.stat-card:nth-child(2) .stat-number', value: this.members.countries },\n            { selector: '.stat-card:nth-child(3) .stat-number', value: this.members.projects },\n            { selector: '.stat-card:nth-child(4) .stat-number', value: this.members.events }\n        ];\n        \n        stats.forEach(stat => {\n            const element = document.querySelector(stat.selector);\n            if (element) {\n                this.animateCounter(element, stat.value);\n            }\n        });\n    }\n\n    animateCounter(element, target) {\n        const duration = 2000;\n        const step = target / (duration / 16);\n        let current = 0;\n        \n        const timer = setInterval(() => {\n            current += step;\n            if (current >= target) {\n                current = target;\n                clearInterval(timer);\n            }\n            element.textContent = Math.floor(current) + (target >= 100 ? '+' : '');\n        }, 16);\n    }\n\n    createModal(content) {\n        const modal = document.createElement('div');\n        modal.className = 'modal-overlay';\n        modal.innerHTML = `\n            <div class=\"modal-container\">\n                <div class=\"modal-content\">\n                    ${content}\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modal);\n        document.body.style.overflow = 'hidden';\n        \n        // Close on backdrop click\n        modal.addEventListener('click', (e) => {\n            if (e.target === modal) {\n                modal.remove();\n                document.body.style.overflow = '';\n            }\n        });\n        \n        return modal;\n    }\n\n    showToast(message, type = 'info') {\n        const container = document.getElementById('toast-container') || this.createToastContainer();\n        \n        const toast = document.createElement('div');\n        toast.className = `toast ${type}`;\n        \n        const icons = {\n            success: 'fa-check-circle',\n            error: 'fa-exclamation-circle',\n            info: 'fa-info-circle'\n        };\n\n        toast.innerHTML = `\n            <i class=\"fas ${icons[type] || icons.info}\"></i>\n            <span>${message}</span>\n            <button class=\"toast-close\">&times;</button>\n        `;\n\n        container.appendChild(toast);\n\n        requestAnimationFrame(() => {\n            toast.classList.add('show');\n        });\n\n        const autoRemove = setTimeout(() => {\n            this.removeToast(toast);\n        }, 5000);\n\n        toast.querySelector('.toast-close').addEventListener('click', () => {\n            clearTimeout(autoRemove);\n            this.removeToast(toast);\n        });\n    }\n\n    createToastContainer() {\n        const container = document.createElement('div');\n        container.id = 'toast-container';\n        container.className = 'toast-container';\n        document.body.appendChild(container);\n        return container;\n    }\n\n    removeToast(toast) {\n        toast.classList.remove('show');\n        setTimeout(() => {\n            toast.remove();\n        }, 300);\n    }\n}\n\n// Initialize Community App\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.communityApp = new CommunityApp();\n    console.log('🚀 Community Platform - Application Initialized');\n});